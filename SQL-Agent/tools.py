from langchain.tools import BaseTool, StructuredTool, tool
from langchain.pydantic_v1 import BaseModel, Field

from utils import execute_sql_query, generate_sql_schema


class SQLEXETOOL(BaseModel):
    query: str = Field(description="sql query generated by query generate tool")


sqlexetool = StructuredTool.from_function(
    func=execute_sql_query,
    name="SQL_EXE_TOOL",
    description="Executes the SQl Query inside the db and returns the output of the query",
    args_schema=SQLEXETOOL,
    return_direct=True,
)


class SQLGENTOOL(BaseModel):
    question: str = Field(description="user query")


sqlgentool = StructuredTool.from_function(
    func=generate_sql_schema,
    name="SQL_GEN_TOOL",
    description="creates sql query",
    args_schema=SQLGENTOOL,
    return_direct=True,
)

#print(sqlgentool.run("provide me a query for sum the total items buy from the store"))
# print(sqlexetool.run(sqlgentool.run("provide me a query for sum the total items buy from the store")))
